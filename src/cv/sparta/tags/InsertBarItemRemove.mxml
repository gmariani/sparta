<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300">
	<mx:Metadata>
		[Event(name="save", type="flash.events.Event")]
		[Event(name="cancel", type="flash.events.Event")]
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import mx.collections.ArrayCollection;
			import mx.validators.Validator;
			import mx.controls.Alert;
			
			[Bindable]
			public var acLanguages:ArrayCollection;
			
			override public function set data(obj:Object):void {
				reset();
				
				txtItemID.text = obj.data.itemID;
				for(var i:String in ddLanguage.dataProvider) {
					if(ddLanguage.dataProvider[i].data == obj.data.language) {
						ddLanguage.selectedItem = ddLanguage.dataProvider[i];
						break;
					}
				}
			}
			
			override public function get data():Object {
				var obj:Object = new Object();
				obj.data = new Object();
				obj.data.itemID = txtItemID.text;
				obj.data.language = ddLanguage.selectedItem.data;
				obj.data.stackType = "remove-item";
				return obj;
			}
			
			public function getEmptyData():Object {
				var obj:Object = new Object();
				obj.data = new Object();
				obj.data.itemID = "";
				obj.data.language = ddLanguage.dataProvider[0].data;
				obj.data.stackType = "remove-item";
				return obj;
			}
			
			public function xmlToObject(f:XML):Object {
				var xmlNS:Namespace = new Namespace("http://www.w3.org/XML/1998/namespace");
				var obj:Object = new Object();
				obj.data = new Object();
				
				obj.data.itemID = "";
				if("@id" in f) obj.data.itemID = f.@id.toString();
				
				obj.data.language = ddLanguage.dataProvider[0].data;
				if(f.@xmlNS::lang && f.@xmlNS::lang.toString().length > 0) {
					obj.data.language = f.@xmlNS::lang.toString();
				}
				
				obj.data.stackType = "remove-item";
				
				return obj;
			}
			
			public function objectToString(obj:Object):String {
				var str:String = "<insertbar-item-remove";
				str += ' id="' + obj.data.itemID + '"';
				str += ' xml:lang="' + obj.data.language + '"';
				str += "/>";
				return str;
			}
			
			public function reset():void {
				txtItemID.text = "";
				txtItemID.errorString = "";
				ddLanguage.selectedIndex = 0;
			}
			
			private function validateForm():void {
            	var validatorArr:Array = [valItemID];
            	var validatorErrorArray:Array = Validator.validateAll(validatorArr);
            	if (validatorErrorArray.length == 0) {
                    dispatchEvent(new Event('save'));
                } else {
                    var err:ValidationResultEvent;
                    var errorMessageArray:Array = [];
                    for each (err in validatorErrorArray) {
                    	var errField:String = FormItem(err.currentTarget.source.parent).label;
                        errorMessageArray.push(errField + ": " + err.message);
                    }
                    Alert.show(errorMessageArray.join("\n\n"), "Invalid Insertbar Item...", Alert.OK);
                }
            }
            
            private function resetForm():void {
            	dispatchEvent(new Event('cancel'));
            }
		]]>
	</mx:Script>
	
	<mx:StringValidator id="valItemID" required="true" source="{txtItemID}" property="text" minLength="2" />
	
	<mx:FormHeading label="Remove Insertbar Item" width="100%" textAlign="center"/>
	
	<mx:FormItem label="Item ID" width="100%" required="true" toolTip="ID of the item to be removed.">
		<mx:TextInput id="txtItemID" width="100%" />
	</mx:FormItem>
	
	<mx:FormItem label="Language" width="100%">
		<mx:toolTip>Specifies the language for the listed file. Extension Manager compares this language with the user language. If the languages match, configuration changes are applied; if not, they are ignored. If Extension Manager can't determine the user language, it applies all configuration changes regardless of their specified language.</mx:toolTip>
		<mx:ComboBox id="ddLanguage" dataProvider="{acLanguages}"/>
	</mx:FormItem>
	
	<mx:FormItem>
		<mx:HBox>
			<mx:Button label="Ok" click="validateForm()"/>
			<mx:Button label="Cancel" click="resetForm()"/>
		</mx:HBox>
	</mx:FormItem>
</mx:Form>