<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="500" 
	title="Comment" >
	
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.events.ValidationResultEvent;
			import mx.validators.Validator;
			import mx.controls.Alert;
			
			override public function set data(obj:Object):void {
				reset();
				
				txtComment.text = obj.data.comment;
			}
			
			override public function get data():Object {
				var obj:Object = new Object();
				obj.data = new Object();
				obj.data.comment = txtComment.text;
				obj.data.tagType = "Comment";
				return obj;
			}
			
			public static function getEmptyData():Object {
				var obj:Object = new Object();
				obj.data = new Object();
				obj.data.comment = "";
				obj.data.tagType = "Comment";
				return obj;
			}
			
			public static function xmlToObject(f:XML):Object {
				var obj:Object = new Object();
				obj.data = new Object();
				
				obj.data.comment = f.toString();
				
				obj.data.tagType = "Comment";
				
				return obj;
			}
			
			public static function objectToString(obj:Object):String {
				var str:String = "<comment><\!\[CDATA\[";
				str += obj.data.comment;
				str += '\]\]></comment>';
				return str;
			}
			
			public function reset():void {
				txtComment.text = "";
			}
			
			private function validateForm():void {
            	var validatorArr:Array = [valComment];
            	var validatorErrorArray:Array = Validator.validateAll(validatorArr);
            	if (validatorErrorArray.length == 0) {
                    dispatchEvent(new Event('SAVE'));
                    resetForm();
                } else {
                    var err:ValidationResultEvent;
                    var errorMessageArray:Array = [];
                    for each (err in validatorErrorArray) {
                    	var errField:String;
                    	if(err.currentTarget.source.parent is HBox) {
                    		errField = FormItem(err.currentTarget.source.parent.parent).label;
                    	} else {
                    		errField = FormItem(err.currentTarget.source.parent).label;
                    	}
                        errorMessageArray.push(errField + ": " + err.message);
                    }
                    Alert.show(errorMessageArray.join("\n\n"), "Invalid Comment...", Alert.OK);
                }
            }
            
            private function resetForm():void {
            	PopUpManager.removePopUp(this);
            }
		]]>
	</mx:Script>
	
	<mx:StringValidator id="valComment" required="true" source="{txtComment}" property="text" />

	<mx:Form id="form" width="100%" height="100%">

		<mx:FormItem label="Comment" width="100%" required="true" >
			<mx:toolTip>Provides a comment about an item being inserted into the menu structure. The Extension Manager inserts this comment (in the form of an XML comment tag) into the menus.xml file as it installs the extension.</mx:toolTip>
			<mx:TextInput id="txtComment" width="100%"  height="100" textAlign="left"/>
		</mx:FormItem>
		
		<mx:FormItem>
			<mx:HBox>
				<mx:Button label="Ok" click="validateForm()"/>
				<mx:Button label="Cancel" click="resetForm()"/>
			</mx:HBox>
		</mx:FormItem>
	</mx:Form>
</mx:TitleWindow>