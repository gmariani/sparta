<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="500" 
	title="Format" xmlns:validators="cv.sparta.validators.*">
	
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.events.ValidationResultEvent;
			import mx.validators.Validator;
			import mx.controls.Alert;
			
			override public function set data(obj:Object):void {
				reset();
				
				txtTag.text = obj.data.format;
			}
			
			override public function get data():Object {
				var obj:Object = new Object();
				obj.data = new Object();
				obj.data.format = txtTag.text;
				obj.data.tagType = "Format";
				return obj;
			}
			
			public static function getEmptyData():Object {
				var obj:Object = new Object();
				obj.data = new Object();
				obj.data.format = "";
				obj.data.tagType = "Format";
				return obj;
			}
			
			public static function xmlToObject(f:XML):Object {
				var obj:Object = new Object();
				obj.data = new Object();
				
				obj.data.format = f.toXMLString();
				
				obj.data.tagType = "Format";
				
				return obj;
			}
			
			public static function objectToString(obj:Object):String {
				return obj.data.format;
			}
			
			public function reset():void {
				txtTag.text = "";
			}
			
			private function validateForm():void {
            	var validatorArr:Array = [valFormat];
            	var validatorErrorArray:Array = Validator.validateAll(validatorArr);
            	if (validatorErrorArray.length == 0) {
                    dispatchEvent(new Event('SAVE'));
                    resetForm();
                } else {
                    var err:ValidationResultEvent;
                    var errorMessageArray:Array = [];
                    for each (err in validatorErrorArray) {
                    	var errField:String;
                    	if(err.currentTarget.source.parent is HBox) {
                    		errField = FormItem(err.currentTarget.source.parent.parent).label;
                    	} else {
                    		errField = FormItem(err.currentTarget.source.parent).label;
                    	}
                        errorMessageArray.push(errField + ": " + err.message);
                    }
                    Alert.show(errorMessageArray.join("\n\n"), "Invalid Format...", Alert.OK);
                }
            }
            
            private function resetForm():void {
            	PopUpManager.removePopUp(this);
            }
		]]>
	</mx:Script>
	
	<validators:XMLValidator id="valFormat" required="true" source="{txtTag}" property="text" />

	<mx:Form id="form" width="100%" height="100%">
		<mx:FormItem width="100%">
			<mx:Text width="100%" height="175">
				<mx:text>This tag’s attributes are difficult to write by hand. The best way to create a format tag is to use the interface inside Dreamweaver. After you create a format, open the appropriate Formats.xml file in a text editor and copy the appropriate format tag (generated by Dreamweaver). Paste this tag into the appropriate place in your extension installation file. Then add an id attribute. Each format ID must be unique; your IDs should start with a company name or some other namespace prefix to ensure uniqueness. In particular, don’t start your IDs with DW, which is the prefix used by the Dreamweaver IDs. One useful approach is to prefix every ID with your domain name (with the elements reversed); for example, if your domain name is joe.com, you could start every ID with com.joe. to ensure uniqueness.</mx:text>
			</mx:Text>
		</mx:FormItem>

		<mx:FormItem label="Format" width="100%" required="true" >
			<mx:TextInput id="txtTag" width="100%"  height="100" textAlign="left"/>
		</mx:FormItem>
		
		<mx:FormItem>
			<mx:HBox>
				<mx:Button label="Ok" click="validateForm()"/>
				<mx:Button label="Cancel" click="resetForm()"/>
			</mx:HBox>
		</mx:FormItem>
	</mx:Form>
</mx:TitleWindow>